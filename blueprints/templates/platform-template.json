{
  "platform": "your-platform",
  "version": "1.0.0",
  "capabilities": {
    "maxBlueprintSize": 10000,
    "supportedFormats": ["markdown", "json"],
    "toolIntegration": true,
    "memoryManagement": false,
    "commandExecution": true,
    "fileManipulation": true,
    "codeCompletion": true,
    "codeReview": false,
    "contextAwareness": "project"
  },
  "constraints": {
    "maxConcurrentBlueprints": 50,
    "BlueprintActivationDelay": 100,
    "supportedLanguages": [
      "javascript",
      "typescript",
      "python",
      "java",
      "go",
      "rust",
      "swift"
    ],
    "requiresConfiguration": false,
    "networkAccess": false
  },
  "integrations": {
    "vscode": true,
    "jetbrains": false,
    "vim": false,
    "github": true,
    "gitlab": false,
    "mcp": false
  },
  "BlueprintFormat": {
    "frontmatter": "yaml",
    "contentFormat": "markdown",
    "xmlTags": false,
    "customSyntax": false
  },
  "_comments": {
    "platform": "Unique identifier for this platform (kebab-case)",
    "version": "Platform specification version (semantic versioning)",
    "capabilities": {
      "maxBlueprintSize": "Maximum size of a single Blueprint in characters",
      "supportedFormats": "File formats the platform can process",
      "toolIntegration": "Can integrate with external development tools",
      "memoryManagement": "Has memory/context management features",
      "commandExecution": "Can execute custom commands or scripts",
      "fileManipulation": "Can read and write files in the workspace",
      "codeCompletion": "Provides intelligent code completion",
      "codeReview": "Can perform automated code review",
      "contextAwareness": "Level of project/workspace context understanding"
    },
    "constraints": {
      "maxConcurrentBlueprints": "Maximum number of Blueprints that can be active simultaneously",
      "BlueprintActivationDelay": "Minimum delay between Blueprint activations (milliseconds)",
      "supportedLanguages": "Programming languages supported by the platform",
      "requiresConfiguration": "Whether platform needs specific setup/configuration",
      "networkAccess": "Whether platform can make network requests"
    },
    "integrations": {
      "description": "Which IDEs and services this platform integrates with"
    },
    "BlueprintFormat": {
      "frontmatter": "Format for Blueprint metadata (yaml, json, toml)",
      "contentFormat": "Primary format for Blueprint content",
      "xmlTags": "Whether platform supports XML-style tags in content",
      "customSyntax": "Whether platform requires platform-specific syntax"
    }
  }
}